本程序是用于定位抓取/拆垛的RVS示例程序：

/******************unstacking_model文件夹说明***************************/
calibrationData        -----用于【HandEyeCalibration】存储标定的图片，也是标定计算的图片；
emulationData         -----用于存放仿真依赖的数据，包括机器人模型等；
InitFile                     -----demo程序初始化需要的文件,包括标定结果文件handeyecalib.txt，相机彩色标定参数文件（连接相机就会在runtime文件夹下面生成），需要拷贝到这里；
model                      -----包含纸箱示例模型【unstacking.mask】；
python                     -----demo程序依赖的python自定义算子；
testData                   -----demo程序的存图路径，也是离线模式下的跑图文件路径；
/**************************************************************/


/******************unstacking_model程序使用说明***************************/
版本：Win_GPU 1.8.294

1.相机连接：切换到【生产界面】，点击【打开相机】按钮，demo自动搜寻相机进行连接。
2.初始化设置：切换到【初始化设置界面】，更新加载相机标定数据路径，连接完相机后会自动在runtime目录下生成ty_color_calib....和ty_depth_calib....两个文件，选择ty_color_calib....文件即可。
3.机器人标定：RVS主界面点击【手眼标定工具】，按标定说明完成机器人标定并【保存标定结果】，保存在InitFile文件夹并重新加载相机标定数据路径。
4.拆垛主程序：处理流程为算子图从左到右->【机器人指令触发】->【图像数据采集】->【抓取点计算】->【通讯返回】。
5.RVS使用文档链接：https://doc.percipio.xyz/rvs/latest/index.html

机器人通讯说明：
IP：本机与机器人连接的网口IP地址
端口：7000（可通过Resoerce中的“TCP服务器连接资源”算子修改）
拍照触发指令：
眼在手上：ROBOT_TCP,X,Y,Z,Rx,Ry,Rz,#  （可通过"TCP服务器接收"算子进行修改格式）
眼在手外：CAPTURE,#   （可通过"TCP服务器接收"算子进行修改格式）
返回坐标格式：X Y Z Rx Ry Rz    (可通过"TCP服务器发送"算子进行修改格式）

标定触发指令：
端口：2013（可通过“手眼标定工具”第④步进行修改）
ROBOR TCP,X,Y,Z,Rx,Ry,Rz#  （机器人到点位后延时2S，然后发送这个指令给RVS）

/**************************************************************/

开机自启步骤：
1.将 start.bat 脚本文件放到 RobotVisionSuite.exe 程序的同级运行目录下。

2.将 start.bat - 快捷方式 文件放到 windows 的启动目录下。
win+R 快捷键进入运行，输入 shell:startup 后确定，进入 windows 启动目录。

3.将 start.bat - 快捷方式 放到启动目录。

